def personal_sum(numbers):

    """

    Функция принимает коллекцию numbers,
    Подсчитывает сумму чисел в numbers путём перебора и увеличивает переменную result,
    Если же при переборе встречается не число, то обрабатывает исключение TypeError,
    увеличив счётчик incorrect_data на 1.
    
    """

    result = 0  # Переменная для хранения суммы
    incorrect_data = 0  # Счетчик некорректных данных

    for num in numbers:
        try:
            result += num  # Попытка добавить число к сумме
        except TypeError:
            print(f'Некорректный тип данных для подсчёта суммы - {num}')
            incorrect_data += 1  # Увеличиваем счетчик при возникновении исключения

    return (result, incorrect_data)  # Функция возвращает кортеж из двух значений:
                                     # result - сумма чисел,
                                     # incorrect_data - кол-во некорректных данных.


def calculate_average(numbers):

    """

    Принимает коллекцию numbers и возвращает: среднее арифметическое всех чисел.

    """

    try:
        if not hasattr(numbers, '__iter__'):
            raise TypeError  # Если нет итератора, вызываем TypeError

        total_sum, incorrect_data_count = personal_sum(numbers)

        if len(numbers) - incorrect_data_count == 0:  # Если в коллекции не осталось чисел,
                                                      # обрабатываем деление на 0
            raise ZeroDivisionError

        return total_sum / (len(numbers) - incorrect_data_count)  # Возвращаем среднее арифметическое

    except ZeroDivisionError:
        return 0  # Возвращаем 0 при делении на 0
    except TypeError:
        print('В numbers записан некорректный тип данных')
        return None  # Возвращаем None при некорректном типе данных

# Пример выполнения программы:
print(f'Результат 1: {calculate_average("1, 2, 3")}') # Строка перебирается, но каждый символ - строковый тип
print(f'Результат 2: {calculate_average([1, "Строка", 3, "Ещё Строка"])}') # Учитываются только 1 и 3
print(f'Результат 3: {calculate_average(567)}') # Передана не коллекция
print(f'Результат 4: {calculate_average([42, 15, 36, 13])}') # Всё должно работать

# Вывод на консоль:
# Некорректный тип данных для подсчёта суммы - 1
# Некорректный тип данных для подсчёта суммы - ,
# Некорректный тип данных для подсчёта суммы -
# Некорректный тип данных для подсчёта суммы - 2
# Некорректный тип данных для подсчёта суммы - ,
# Некорректный тип данных для подсчёта суммы -
# Некорректный тип данных для подсчёта суммы - 3
# Результат 1: 0
# Некорректный тип данных для подсчёта суммы - Строка
# Некорректный тип данных для подсчёта суммы - Ещё Строка
# Результат 2: 2.0
# В numbers записан некорректный тип данных
# Результат 3: None
# Результат 4: 26.5